graph TD
A[C++ code] -->B[OpenCV]
B-->V[OpenVINO backend]
B -->O[OpenCV backend]
V-->D[CPU]
V-->E[GPU 32-bit]
V-->F[GPU 16-bit]
V-->G[VPU]

graph TD
A[C++] -->B[OpenCV]
B-->Caffe
B -->TensorFlow
B -->Torch
B -->Darknet
B-->V(OpenVINO IR)

graph TD
subgraph cloud
S[MQTT Server]
end
subgraph local
subgraph Frame goroutine
Q[Take next available frame from channel]-->P[Look assembly parts using OpenCV]
P-->U[Notify if defect found]
U-->UP[Update publish results channel *OPTIONAL]
end
subgraph Main goroutine
C[Capture frames]-->MQ[Add to frame channel]
MQ-->W[Window with display including results stats]
DC[Get stats from display results channel]-->W
end
subgraph Messaging goroutine *OPTIONAL
SC[Get stats from publish results channel]-->M
M[Send MQTT messages to server with results stats]-->S
end
end
